/**
 * ATO Chrome Extension - Animation System
 * Modern animations and transitions for enhanced user experience
 */

/* =============================================================================
   KEYFRAME DEFINITIONS
   ============================================================================= */

/* Fade Animations */
@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes fadeOut {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}

@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(1rem);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes fadeInDown {
  from {
    opacity: 0;
    transform: translateY(-1rem);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Slide Animations */
@keyframes slideUp {
  from {
    transform: translateY(100%);
    opacity: 0;
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}

@keyframes slideDown {
  from {
    transform: translateY(-100%);
    opacity: 0;
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}

@keyframes slideLeft {
  from {
    transform: translateX(100%);
    opacity: 0;
  }
  to {
    transform: translateX(0);
    opacity: 1;
  }
}

@keyframes slideRight {
  from {
    transform: translateX(-100%);
    opacity: 0;
  }
  to {
    transform: translateX(0);
    opacity: 1;
  }
}

/* Scale Animations */
@keyframes scaleIn {
  from {
    transform: scale(0.9);
    opacity: 0;
  }
  to {
    transform: scale(1);
    opacity: 1;
  }
}

@keyframes scaleOut {
  from {
    transform: scale(1);
    opacity: 1;
  }
  to {
    transform: scale(0.9);
    opacity: 0;
  }
}

@keyframes bounce {
  0%,
  20%,
  53%,
  80%,
  100% {
    animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);
    transform: translate3d(0, 0, 0);
  }
  40%,
  43% {
    animation-timing-function: cubic-bezier(0.755, 0.05, 0.855, 0.06);
    transform: translate3d(0, -30px, 0);
  }
  70% {
    animation-timing-function: cubic-bezier(0.755, 0.05, 0.855, 0.06);
    transform: translate3d(0, -15px, 0);
  }
  90% {
    transform: translate3d(0, -4px, 0);
  }
}

/* Rotation Animations */
@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

@keyframes spinSlow {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

/* Loading Animations */
@keyframes pulse {
  0%,
  100% {
    opacity: 1;
  }
  50% {
    opacity: 0.5;
  }
}

@keyframes shimmer {
  0% {
    background-position: -200% 0;
  }
  100% {
    background-position: 200% 0;
  }
}

@keyframes wave {
  0%,
  60%,
  100% {
    transform: initial;
  }
  30% {
    transform: translateY(-15px);
  }
}

/* Elastic Animations */
@keyframes rubberBand {
  from {
    transform: scale3d(1, 1, 1);
  }
  30% {
    transform: scale3d(1.25, 0.75, 1);
  }
  40% {
    transform: scale3d(0.75, 1.25, 1);
  }
  50% {
    transform: scale3d(1.15, 0.85, 1);
  }
  65% {
    transform: scale3d(0.95, 1.05, 1);
  }
  75% {
    transform: scale3d(1.05, 0.95, 1);
  }
  to {
    transform: scale3d(1, 1, 1);
  }
}

/* Wobble Animation */
@keyframes wobble {
  from {
    transform: translate3d(0, 0, 0);
  }
  15% {
    transform: translate3d(-25%, 0, 0) rotate3d(0, 0, 1, -5deg);
  }
  30% {
    transform: translate3d(20%, 0, 0) rotate3d(0, 0, 1, 3deg);
  }
  45% {
    transform: translate3d(-15%, 0, 0) rotate3d(0, 0, 1, -3deg);
  }
  60% {
    transform: translate3d(10%, 0, 0) rotate3d(0, 0, 1, 2deg);
  }
  75% {
    transform: translate3d(-5%, 0, 0) rotate3d(0, 0, 1, -1deg);
  }
  to {
    transform: translate3d(0, 0, 0);
  }
}

/* Shake Animation for Errors */
@keyframes shake {
  10%,
  90% {
    transform: translate3d(-1px, 0, 0);
  }
  20%,
  80% {
    transform: translate3d(2px, 0, 0);
  }
  30%,
  50%,
  70% {
    transform: translate3d(-4px, 0, 0);
  }
  40%,
  60% {
    transform: translate3d(4px, 0, 0);
  }
}

/* Glow Animation */
@keyframes glow {
  from {
    box-shadow: 0 0 5px var(--color-primary-500);
  }
  to {
    box-shadow:
      0 0 20px var(--color-primary-500),
      0 0 30px var(--color-primary-400);
  }
}

/* Breathe Animation */
@keyframes breathe {
  0%,
  100% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.05);
  }
}

/* Progress Loading */
@keyframes progressLoad {
  0% {
    width: 0%;
  }
  100% {
    width: 100%;
  }
}

/* =============================================================================
   ANIMATION UTILITY CLASSES
   ============================================================================= */

/* Fade Animations */
.animate-fade-in {
  animation: fadeIn var(--duration-normal) var(--ease-out) forwards;
}

.animate-fade-out {
  animation: fadeOut var(--duration-normal) var(--ease-out) forwards;
}

.animate-fade-in-up {
  animation: fadeInUp var(--duration-normal) var(--ease-spring) forwards;
}

.animate-fade-in-down {
  animation: fadeInDown var(--duration-normal) var(--ease-spring) forwards;
}

/* Slide Animations */
.animate-slide-up {
  animation: slideUp var(--duration-normal) var(--ease-spring) forwards;
}

.animate-slide-down {
  animation: slideDown var(--duration-normal) var(--ease-spring) forwards;
}

.animate-slide-left {
  animation: slideLeft var(--duration-normal) var(--ease-spring) forwards;
}

.animate-slide-right {
  animation: slideRight var(--duration-normal) var(--ease-spring) forwards;
}

/* Scale Animations */
.animate-scale-in {
  animation: scaleIn var(--duration-fast) var(--ease-spring) forwards;
}

.animate-scale-out {
  animation: scaleOut var(--duration-fast) var(--ease-spring) forwards;
}

.animate-bounce {
  animation: bounce 1s infinite;
}

/* Loading Animations */
.animate-spin {
  animation: spin 1s linear infinite;
}

.animate-spin-slow {
  animation: spinSlow 2s linear infinite;
}

.animate-pulse {
  animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
}

.animate-shimmer {
  animation: shimmer 1.5s ease-in-out infinite;
}

.animate-wave {
  animation: wave 1.5s ease-in-out infinite;
}

/* Elastic Animations */
.animate-rubber-band {
  animation: rubberBand var(--duration-slow) ease-in-out;
}

.animate-wobble {
  animation: wobble var(--duration-slow) ease-in-out;
}

.animate-shake {
  animation: shake 0.6s ease-in-out;
}

/* Special Effects */
.animate-glow {
  animation: glow 2s ease-in-out infinite alternate;
}

.animate-breathe {
  animation: breathe 3s ease-in-out infinite;
}

.animate-progress {
  animation: progressLoad var(--duration-slow) var(--ease-out) forwards;
}

/* =============================================================================
   TRANSITION UTILITY CLASSES
   ============================================================================= */

/* Basic Transitions */
.transition-none {
  transition: none;
}

.transition-all {
  transition: all var(--duration-fast) var(--ease-out);
}

.transition-colors {
  transition:
    color var(--duration-fast) var(--ease-out),
    background-color var(--duration-fast) var(--ease-out),
    border-color var(--duration-fast) var(--ease-out);
}

.transition-opacity {
  transition: opacity var(--duration-fast) var(--ease-out);
}

.transition-shadow {
  transition: box-shadow var(--duration-fast) var(--ease-out);
}

.transition-transform {
  transition: transform var(--duration-fast) var(--ease-out);
}

/* Duration Variants */
.duration-instant {
  transition-duration: var(--duration-instant);
}

.duration-fast {
  transition-duration: var(--duration-fast);
}

.duration-normal {
  transition-duration: var(--duration-normal);
}

.duration-slow {
  transition-duration: var(--duration-slow);
}

.duration-slower {
  transition-duration: var(--duration-slower);
}

/* Easing Variants */
.ease-linear {
  transition-timing-function: var(--ease-linear);
}

.ease-in {
  transition-timing-function: var(--ease-in);
}

.ease-out {
  transition-timing-function: var(--ease-out);
}

.ease-in-out {
  transition-timing-function: var(--ease-in-out);
}

.ease-bounce {
  transition-timing-function: var(--ease-bounce);
}

.ease-spring {
  transition-timing-function: var(--ease-spring);
}

/* =============================================================================
   HOVER EFFECTS
   ============================================================================= */

/* Lift Effect */
.hover-lift {
  transition: transform var(--duration-fast) var(--ease-out);
}

.hover-lift:hover {
  transform: translateY(-2px);
}

/* Glow Effect */
.hover-glow {
  transition: box-shadow var(--duration-fast) var(--ease-out);
}

.hover-glow:hover {
  box-shadow: 0 0 20px var(--color-primary-200);
}

/* Scale Effect */
.hover-scale {
  transition: transform var(--duration-fast) var(--ease-out);
}

.hover-scale:hover {
  transform: scale(1.05);
}

.hover-scale-sm:hover {
  transform: scale(1.02);
}

.hover-scale-lg:hover {
  transform: scale(1.1);
}

/* Rotate Effect */
.hover-rotate {
  transition: transform var(--duration-fast) var(--ease-out);
}

.hover-rotate:hover {
  transform: rotate(5deg);
}

/* Brightness Effect */
.hover-brighten {
  transition: filter var(--duration-fast) var(--ease-out);
}

.hover-brighten:hover {
  filter: brightness(1.1);
}

/* =============================================================================
   FOCUS EFFECTS
   ============================================================================= */

.focus-ring {
  transition: box-shadow var(--duration-fast) var(--ease-out);
}

.focus-ring:focus-visible {
  outline: none;
  box-shadow: 0 0 0 3px var(--color-primary-100);
}

.focus-ring-inset:focus-visible {
  box-shadow: inset 0 0 0 2px var(--color-primary-500);
}

/* =============================================================================
   LOADING STATES
   ============================================================================= */

.loading-dots {
  display: inline-block;
}

.loading-dots::after {
  content: "";
  animation: loadingDots 1.5s infinite;
}

@keyframes loadingDots {
  0%,
  33% {
    content: ".";
  }
  34%,
  66% {
    content: "..";
  }
  67%,
  100% {
    content: "...";
  }
}

/* Skeleton Placeholder */
.skeleton-loader {
  background: linear-gradient(
    90deg,
    var(--color-surface-secondary) 25%,
    var(--color-surface-tertiary) 50%,
    var(--color-surface-secondary) 75%
  );
  background-size: 200% 100%;
  animation: shimmer 1.5s infinite;
}

/* =============================================================================
   RESPONSIVE ANIMATIONS
   ============================================================================= */

/* Respect user's motion preferences */
@media (prefers-reduced-motion: reduce) {
  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }

  .animate-spin,
  .animate-pulse,
  .animate-bounce {
    animation: none;
  }
}

/* =============================================================================
   ENTRANCE ANIMATIONS
   ============================================================================= */

/* Staggered animations for lists */
.stagger-children > * {
  animation-delay: calc(var(--i, 0) * 100ms);
}

/* Modal entrance */
.modal-enter {
  animation: modalEnter var(--duration-normal) var(--ease-spring) forwards;
}

@keyframes modalEnter {
  from {
    opacity: 0;
    transform: scale(0.95) translateY(-10px);
  }
  to {
    opacity: 1;
    transform: scale(1) translateY(0);
  }
}

/* Toast notification entrance */
.toast-enter {
  animation: toastEnter var(--duration-normal) var(--ease-spring) forwards;
}

@keyframes toastEnter {
  from {
    opacity: 0;
    transform: translateX(100%);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

/* Slide panel entrance */
.panel-enter {
  animation: panelEnter var(--duration-normal) var(--ease-out) forwards;
}

@keyframes panelEnter {
  from {
    opacity: 0;
    transform: translateX(-100%);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

/* =============================================================================
   SUCCESS ANIMATIONS
   ============================================================================= */

.success-checkmark {
  animation: successCheckmark 0.6s var(--ease-spring) forwards;
}

@keyframes successCheckmark {
  0% {
    stroke-dasharray: 0 100;
    stroke-dashoffset: 0;
  }
  100% {
    stroke-dasharray: 100 100;
    stroke-dashoffset: 0;
  }
}

/* Success celebration */
.success-celebration {
  animation: successCelebration 0.8s var(--ease-bounce) forwards;
}

@keyframes successCelebration {
  0% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.2);
  }
  100% {
    transform: scale(1);
  }
}
